=== Instructions ===
1. Build arm gem5
    scons build/ARM/gem5.opt

2. Build linux kernel image for arm gem5.

   - Kernel image:
   git clone https://github.com/gem5/linux-arm-gem5.git
   cd linux-arm-gem5
   make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- gem5_defconfig
   make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- -j4

   - Disk image: The disk image we used is donwloaded from
   ARM Full-System Files - http://gem5.org/Download
   We put the parsec benchmarks is in directory "/home/gem5/benchmarks/parsec/"

3. Configure gem5 environment and parsec (introduced in next section)

4. Run run_cpusim.py

** Make sure the disk has enough space because each simulation instance will
generate huge amount of memory trace data though they are compressed.

=== Files ===
* Control Scripts
- run_cpusim.py
    Run gem5 simulation based on the configurations. A number of simulation
    instances will be brought up according to number of CPU cores.

- global_conf.py
    Global configurations include gem5 environment, benchmark and output.

- gen_gem5.py
    Generates scripts for running gem5 instances. For each frequency
    config, there is a corresponding set of scripts for running each
    benchmark.

- gen_rcS.py
    Generates scripts for running parsec benchmarks in simulation
    environment.

- gem5_conf.py
    Predefined gem5 configurations. We added configurations for simulating
    Exynos 5422 which has two clusters of ARM Coretex A15 and A7 CPUs and
    each cluster has shared L2 cache.

- parsec_conf.py
    Predefined parsec related configurations.

- cpt-XXX/
    To reduce the time for simulation, we use gem5 checkpoint to skip the boot
    process. gem5 provides a script (gem5/configs/boot/hack_back_ckpt.rcS) which
    can help create such checkpoint. The checkpoint will continue right after linux
    has booted and run the specified script. These folders are the checkpoints
    we used to run benchmarks.

* Default Output File Structure
output/
    rcs/
    	scripts for running benchmarks in simuluation environment
    run_scripts/
    	scripts for running gem5 instances
    cpt-[arch]_[frequency]/
    	gem5 output for each configuration

